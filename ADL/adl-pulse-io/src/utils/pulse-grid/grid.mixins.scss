@mixin make-grid() {
	width: 100%;
	display: flex;
	flex-direction: column;
	box-sizing: border-box;
}

@mixin make-grid-max-widths($max-widths: $grid-max-widths, $breakpoints: $grid-breakpoints) {
	@each $breakpoint,
	$container-max-width in $max-widths {
		@include media-breakpoint-up($breakpoint, $breakpoints) {
			$grid-padding-width: map-get($grid-padding-widths, $breakpoint);
			$container-max-margin: map-get($grid-max-margins, $breakpoint);
			margin: 0 $container-max-margin - ($grid-padding-width / 2);
			width: $container-max-width + $grid-padding-width;
			max-width: 100%;
		}
	}
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
	$min: map-get($breakpoints, $name);
	@return if($min !=0, $min, null);
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($name, $breakpoints);
	@if $min {
		@media (min-width: $min) {
			@content;
		}
	}
	@else {
		@content;
	}
}

@mixin make-row() {
	display: flex;
	flex-wrap: wrap;
	box-sizing: border-box;
}

@mixin make-column-base() {
	position: relative;
	width: 100%;
	margin: 0;
	min-height: 1px;
	flex-basis: 0;
	flex-grow: 1;
	max-width: 100%;
	box-sizing: border-box;
}

@mixin make-column($size, $columns: $grid-columns) {
	flex: 0 0 percentage($size / $columns);
	width: percentage($size / $columns);
	max-width: percentage($size / $columns);
}

@mixin make-column-padding($padding-widths: $grid-padding-widths) {
	@each $breakpoint in map-keys($padding-widths) {
		@include media-breakpoint-up($breakpoint) {
			$padding-width: map-get($padding-widths, $breakpoint);
			padding: 0 $padding-width / 2;
		}
	}
}

@mixin make-column-offset($size, $columns: $grid-columns) {
	margin-left: percentage($size / $columns);
}

@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
	@return if(breakpoint-min($name, $breakpoints)==null, "", "-#{$name}");
}

@mixin make-grid-columns($padding-widths: $grid-padding-widths, $breakpoints: $grid-breakpoints) {
	@each $breakpoint in map-keys($breakpoints) {
		$infix: "-#{$breakpoint}";
		$columns: map-get($grid-columns, $breakpoint);
		@for $i from 1 through $columns {
			.pulse-col#{$infix}-#{$i} {
				@include make-column-padding($padding-widths);
			}
		}
		.pulse-col#{$infix} {
			@include make-column-padding($padding-widths);
		}
		@include media-breakpoint-up($breakpoint, $breakpoints) {
			.pulse-col#{$infix} {
				flex-basis: 0;
				flex-grow: 1;
				max-width: 100%;
			}
			.pulse-col#{$infix}-auto {
				flex: 0 0 auto;
				width: auto;
			}
			@for $i from 1 through $columns {
				.pulse-col#{$infix}-#{$i} {
					@include make-column($i, $columns);
				}
			}
			@for $i from 0 through ($columns - 1) {
				@if not (breakpoint-infix($breakpoint, $breakpoints)=="" and $i==0) {
					.pulse-offset#{$infix}-#{$i} {
						@include make-column-offset($i, $columns);
					}
				}
			}
		}
	}
}
